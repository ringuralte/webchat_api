{"version":3,"file":"static/webpack/static/development/pages/p/[id].js.06f593340c2d5790a276.hot-update.js","sources":["webpack:///./components/Store.js"],"sourcesContent":["import React from \"react\";\nimport io from \"socket.io-client\";\n\nexport const storeCTX = React.createContext();\n\nlet socket;\n\nconst initState = {};\n\nfunction reducer(state, action) {\n  //might not be the right way for react\n  const prevState = { ...state };\n  const length = Object.keys(prevState).length;\n  prevState[length + 1] = action.payload;\n  switch (action.type) {\n    case \"RECEIVE MESSAGE\":\n    {\n      console.log(action.payload.topic);\n      if (action.payload.topic === JSON.parse(window.localStorage.getItem(\"topic\"))) {\n        return prevState\n      }\n    }\n    case \"FETCH MESSAGE\":\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction sendChatAction(value) {\n  console.log(value)\n  socket.emit(\"chat message\", value);\n}\n\nconst Store = props => {\n  const [newLink, setNewLink] = React.useState({});\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n  const [user, setUser] = React.useState(\"\");\n\n  // const [topic, dispatchTopic] = React.useReducer(topicReducer, \"\")\n  //topic should not be confused with newLink, newLink fetches data from server\n  //while topic is just used for UI stuffs in header component\n  const [topic, setTopic] = React.useState(\"\");\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:5000/api/topics\", { credentials: \"include\" })\n      .then(res => res.json())\n      .then(json => {\n        if(json.code === 200) {\n          setNewLink(json.topics);\n        }\n      });\n  }, []);\n\n  if (!socket) {\n    socket = io(\":5000\")\n    socket.on(\"chat message\", function(msg) {\n      dispatch({ type: \"RECEIVE MESSAGE\", payload: msg });\n    });\n  }\n  return (\n    <storeCTX.Provider\n      value={{\n        allChats,\n        dispatch,\n        sendChatAction,\n        newLink,\n        user,\n        setUser,\n        topic,\n        setTopic\n      }}\n    >\n      {props.children}\n    </storeCTX.Provider>\n  );\n};\n\nexport default Store;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;;;;A","sourceRoot":""}