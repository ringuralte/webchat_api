{"version":3,"file":"static/webpack/static/development/pages/signin.js.4c91d35fc5c2d31ee93c.hot-update.js","sources":["webpack:///./components/Header.js"],"sourcesContent":["import React from \"react\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\n\nimport { storeCTX } from \"./Store\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: 0,\n      minHeight: \"7vh\",\n      background: \"#292d3e\"\n    },\n    drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: drawerWidth,\n        flexShrink: 0\n      }\n    },\n    appBar: {\n      width: \"100vw\",\n      backgroundColor: \"#282828\"\n    },\n    menuButton: {\n      color: \"#eeffff\"\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    title: {\n      flexGrow: 1\n    },\n    topDrawer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      padding: \"15px 5px 15px 5px\"\n    },\n    user: {\n      display: \"flex\"\n    },\n    iconColor: {\n      color: \"limegreen\"\n    },\n    signOut: {\n      display: \"flex\",\n      border: 0,\n      backgroundColor: \"inherit\"\n    }\n  })\n);\n\nconst Header = props => {\n  const { container } = props;\n  const classes = useStyles();\n  const { newLink, topic, setTopic } = React.useContext(storeCTX);\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const user = Cookies.get(\"user\");\n\n  // so that topic state will be preserved on refresh\n  React.useEffect(() => {\n    setTopic({ title: JSON.parse(window.localStorage.getItem(\"topic\")) });\n  }, []);\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const signOut = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:5000/api/signOut\", {\n      method: \"get\",\n      credentials: \"include\"\n    })\n      .then(() => {\n        window.localStorage.removeItem(\"topic\");\n        setTopic(\"\")\n      })\n      .then(Router.push(\"/signin\"));\n  };\n\n  //only show topics and top drawer if user is logged in\n  let topDrawer;\n  let topics;\n\n  if (user) {\n    topDrawer = (\n      <div className={classes.topDrawer}>\n        <span className={classes.user}>\n          <AccountCircle className={classes.iconColor} />\n          {user}\n        </span>\n        <button className={classes.signOut} onClick={signOut}>\n          Sign Out <ExitToApp />\n        </button>\n      </div>\n    );\n  }\n\n  if (user) {\n    topics = Object.keys(newLink).map(key => (\n      <ListItem\n        button\n        key={key}\n        onClick={() => {\n          window.localStorage.setItem(\n            \"topic\",\n            JSON.stringify(newLink[key].title)\n          );\n          setTopic(newLink[key]);\n          setMobileOpen(!mobileOpen);\n        }}\n      >\n        <Link href=\"/p/[id]\" as={`/p/${newLink[key].title}`}>\n          <ListItemText primary={\"#\" + newLink[key].title} />\n        </Link>\n      </ListItem>\n    ));\n  }\n\n  const drawer = (\n    <div>\n      {topDrawer}\n      <Divider />\n      <List>\n        {topics}\n        <ListItem button onClick={() => setTopic(\"\")}>\n          <Link href=\"/signin\">\n            <ListItemText primary={\"#\" + \"signin\"} />\n          </Link>\n        </ListItem>\n        <ListItem button onClick={() => setTopic(\"\")}>\n          <Link href=\"/signup\">\n            <ListItemText primary={\"#\" + \"signup\"} />\n          </Link>\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              aria-label=\"menu\"\n              onClick={handleDrawerToggle}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h5\" className={classes.title}>\n              Chat App\n            </Typography>\n            <Typography variant=\"subtitle2\">{topic.title}</Typography>\n          </Toolbar>\n        </AppBar>\n        <nav aria-label=\"drawer\" className={classes.drawer}>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              ModalProps={{\n                keepMounted: true\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AArCA;AADA;AACA;AA6CA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAkmBA;AACA;AACA;;;;A","sourceRoot":""}