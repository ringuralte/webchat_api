{"version":3,"file":"static/webpack/static/development/pages/p/[id].js.2bfb12b4c3a36928b8eb.hot-update.js","sources":["webpack:///./components/Textbox.js"],"sourcesContent":["//TODO put sendChatAction here and return a legit value to the reducer\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Cookies from \"js-cookie\";\n\nimport { storeCTX } from \"../components/Store\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    chatButton: {\n      width: \"10%\"\n    },\n    chatBox: {\n      width: \"90%\"\n    },\n    type: {\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    bar: {\n      backgroundColor: \"rgb(255,255,255)\",\n      top: \"auto\",\n      bottom: 0\n    }\n  })\n);\n\nconst Textbox = () => {\n  const classes = useStyles();\n  const { sendChatAction } = React.useContext(storeCTX);\n\n  const enterKeyPress = e => {\n    if (e.keyCode == 13) {\n      handleSubmit(e);\n    }\n  };\n  const [textValue, changeTextValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:5000/api/postChat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n      body: JSON.stringify({\n        topic: window.localStorage.getItem(\"topic\"),\n        msg: textValue\n      })\n    })\n      .then(res => res.json())\n      .then(json => {\n        if (json.code === 401) {\n          alert('error ' + json.message);\n          changeTextValue(\"\");\n        } else {\n          console.log(JSON.stringify(json.id[\"id\"]))\n          console.log(JSON.stringify(json.id))\n          sendChatAction({\n            id: JSON.stringify(json.id),\n            sender: Cookies.get(\"user\"),\n            msg: textValue\n          });\n          changeTextValue(\"\");\n        }\n      })\n      .catch(err => alert('error ' + err.message));\n  };\n\n  return (\n    <AppBar position=\"fixed\" className={classes.bar}>\n      <ToolBar className={classes.type}>\n        <TextField\n          className={classes.chatBox}\n          label=\"Send a chat\"\n          onKeyDown={enterKeyPress}\n          value={textValue}\n          onChange={e => changeTextValue(e.target.value)}\n        />\n        <Button\n          className={classes.chatButton}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={handleSubmit}\n        >\n          Send\n        </Button>\n      </ToolBar>\n    </AppBar>\n  );\n};\n\nexport default Textbox;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAbA;AADA;AACA;AAqBA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}